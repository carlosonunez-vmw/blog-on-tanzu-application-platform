apiVersion: carto.run/v1alpha1
kind: ClusterConfigTemplate
metadata:
  name: blog-config
spec:
  # configPath: This is the property within the config that's generated by this template that has
  # stuff that you want to make available to your Supply Chains.
  configPath: .data
  healthRule:
    # CCTs are usually AlwaysHealthy since configurations usually don't have
    # statuses attached to them.
    alwaysHealthy: {}
  ytt: |
    #@ load("@ytt:data", "data")

    #@ def _get_param_value_with_default(param, default_param):
    #    if hasattr(data.values.params, param):
    #      return data.values.params[param]
    #    end
    #    return data.values.params[default_param]
    #@ end
    
    #@ def _get_param_or_fail(param, fail_msg):
    #    return data.values.params[param] or assert.fail(fail_msg)
    #@ end
    
    #@ def blog_gen_version():
    #@   _get_param_value_with_default("blog_gen_version", "default_blog_gen_version")
    #@ end

    #@ def blog_gen_url():
    #@   _get_param_value_with_default("blog_gen_url", "default_blog_gen_url")
    #@ end
    
    #@ def blog_url_exn():
    #@    _get_param_or_fail("blog_url", "Please define 'blog_url' in your workload.")
    #@ end
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: #@ "{}-config".format(data.values.workload.metadata.name)
    data:
      blog_gen_version: #@ blog_gen_version()
      blog_gen_url: #@ blog_gen_url()
      blog_url: #@ blog_url_exn()

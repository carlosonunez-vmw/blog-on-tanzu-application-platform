---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: fetch-blog
  namespace: default
spec:
  description: Fetch the Blog
  workspaces:
    - name: scratch-space
  params:
    - name: blog_git_url
      type: string
    - name: blog_git_ref
      type: string
  steps:
    - image: alpine:3.16
      script: |
        >&2 echo "===> Ensuring scratch space is empty..."
        rm -rf $(workspaces.scratch-space.path)/*
    - image: bitnami/git
      args:
        - git
        - clone
        - --branch
        - $(params["blog_git_ref"])
        - $(params["blog_git_url"])
        - $(workspaces.scratch-space.path)
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: fetch-blog-gen
  namespace: default
spec:
  description: Fetch Blog Gen
  workspaces:
    - name: scratch-space
  params:
    - name: blog_gen_git_url
    - name: blog_gen_git_ref
  steps:
    - image: bitnami/git
      args:
        - git
        - clone
        - --branch
        - $(params["blog_gen_git_ref"])
        - $(params["blog_gen_git_url"])
        - $(workspaces.scratch-space.path)/blog-gen
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: decrypt-blog-env
  namespace: default
spec:
  description: Decrypt Blog Environment Dotenv
  workspaces:
    - name: scratch-space
    - name: blog-env-secret
  steps:
    - image: alpine:3.16
      script: |
        set -eo pipefail
        apk update
        apk add gnupg
        gpg --batch --decrypt --yes \
          --passphrase=$(cat $(workspaces.blog-env-secret.path)/password) \
          --output $(workspaces.scratch-space.path)/.env \
          $(workspaces.scratch-space.path)/env.gpg
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: render-blog
  namespace: default
spec:
  description: Render Blog
  workspaces:
    - name: scratch-space
  results:
    - name: blog-server-name
      type: string
    - name: blog-version
      type: string
  volumes:
    - name: dind-storage
      emptyDir: {}
    - name: dind-socket
      emptyDir: {}
    - name: blog-staging-dir
      emptyDir: {}
  sidecars:
    - image: docker:24.0.6-dind
      name: dockerd
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/docker
          name: dind-storage
        - mountPath: /var/run
          name: dind-socket
        # /tmp needs to be mounted here and shared
        # with the task Pod since volume mounts
        # in DinD passthrough into the host
        # from the nested container.
        - mountPath: /tmp
          name: blog-staging-dir
  steps:
    - image: docker:24.0.6-cli-alpine3.18
      name: blog-gen-run
      volumeMounts:
        - mountPath: /var/run
          name: dind-socket
        - mountPath: /tmp
          name: blog-staging-dir
      env:
        - name: PLATFORM
          value: local
        - name: LOCAL_DESTINATION_PARENT_DIR
          value: $(workspaces.scratch-space.path)/out
      script: |
        apk update && apk add bash rsync git netcat-openbsd curl
        >&2 echo "===> Waiting 10 seconds for Docker daemon to start"
        attempts=0
        while [[ "$attempts" -le 10 ]]
        do
          status=$(curl --unix-socket /var/run/docker.sock http:/v1/info -w '%{http_code}' -o /dev/null -sS) || true
        >&2 echo "Status: $status"
          [[ "$status" == "200" ]] && break
          >&2 echo "---> Trying again [attempt $attempts of 10]; last code: $status"
          attempts=$((attempts+1))
          sleep 1
        done
        [[ "$attempts" -eq 10 ]] && exit 1
        cd $(workspaces.scratch-space.path)
        >&2 echo "===> Deploying blog"
        $(workspaces.scratch-space.path)/blog-gen/scripts/deploy || exit 1
        grep -E '^url:' $LOCAL_DESTINATION_PARENT_DIR/blog/.blog-metadata | tr -d '"' | \
          awk -F '/' '{print $NF}' | tr -d '\n'  > $(results.blog-server-name.path)
        grep -E '^version:' $LOCAL_DESTINATION_PARENT_DIR/blog/.blog-metadata | \
          awk -F ' ' '{print $NF}' | tr -d '\n' > $(results.blog-version.path)
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: create-and-push-blog-image
  namespace: default
spec:
  description: Create and Push Blog Image
  workspaces:
    - name: scratch-space
    - name: blog-registry-secret
      description: |
        The Kubernetes secret containing credentials to the image registry
        the blog will be stored into.
  params:
    - name: registry_name
    - name: blog_server_name
    - name: blog_version
  results:
    - name: blog_image_tag
      type: string
  steps:
    - image: bash:5
      script: |
        set -x
        printf "%s/%s:%s" $(params["registry_name"]) \
          $(params["blog_server_name"]) \
          $(params["blog_version"]) > $(results.blog_image_tag.path)
    - image: gcr.io/kaniko-project/executor:v1.9.1
      env:
        - name: DOCKER_CONFIG
          value: $(workspace.blog-registry-secret.path)
      args:
        - -v
        - trace
        - --dockerfile
        - $(workspaces.scratch-space.path)/out/blog/Dockerfile
        - --context
        - dir://$(workspaces.scratch-space.path)/out/blog
        - --destination
        - $(results.blog_image_tag.path)
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: render-the-blog
spec:
  description: Render the Blog
  params:
    - name: blog_gen_url
    - name: blog_gen_version
    - name: blog_url
    - name: blog_ref
    - name: registry_name
  workspaces:
    - name: scratch-space
    - name: blog-env-secret
    - name: blog-registry-secret
  results:
    - name: image_tag
      description: The tag of the final image produced for the blog.
      value: $(tasks.create-and-push-blog-image.results.blog_image_tag)
  tasks:
    - name: fetch-blog
      taskRef:
        kind: ClusterTask
        name: fetch-blog
      params:
        - name: blog_git_url
          value: "$(params.blog_url)"
        - name: blog_git_ref
          value: "$(params.blog_ref)"
      workspaces:
        - name: scratch-space
    - name: fetch-blog-gen
      runAfter:
        - fetch-blog
      taskRef:
        kind: ClusterTask
        name: fetch-blog-gen
      params:
        - name: blog_gen_git_url
          value: "$(params.blog_gen_url)"
        - name: blog_gen_git_ref
          value: "$(params.blog_gen_version)"
      workspaces:
        - name: scratch-space
    - name: decrypt-blog-env
      runAfter:
        - fetch-blog-gen
      taskRef:
        kind: ClusterTask
        name: decrypt-blog-env
      workspaces:
        - name: scratch-space
        - name: blog-env-secret
    - name: render-blog
      runAfter:
        - decrypt-blog-env
      taskRef:
        kind: ClusterTask
        name: render-blog
      workspaces:
        - name: scratch-space
    - name: create-and-push-blog-image
      runAfter:
        - render-blog
      taskRef:
        kind: ClusterTask
        name: create-and-push-blog-image
      params:
        - name: registry_name
          value: "$(params.registry_name)"
        - name: blog_server_name
          value: "$(tasks.render-blog.results.blog-server-name)"
        - name: blog_version
          value: "$(tasks.render-blog.results.blog-version)"
      workspaces:
        - name: scratch-space
        - name: blog-registry-secret
